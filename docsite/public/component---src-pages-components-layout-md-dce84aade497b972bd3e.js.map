{"version":3,"sources":["webpack:///./src/pages/components/Layout.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-components-layout-md-dce84aade497b972bd3e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/sdalonzo/Documents/GitHub/design-system/docsite/src/components/Layout/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Layout Guide`}</h1>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"Box.md\"\n      }}>{`Box`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"Flex.md\"\n      }}>{`Flex`}</a>{` components are low-level layout components that can handle virtually\nany layout styling that could be handled with a grid system as well as handle a lot of microlayout styles.`}</p>\n    <h3>{`Flexbox`}</h3>\n    <p>{`To effectively use the Flex component, you should be familiar with Flexible Box (flexbox) Layout.\nThe following links can be useful to understand how flexbox works:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.w3.org/TR/css-flexbox-1/\"\n        }}>{`CSS Flexible Box Layout Module`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes\"\n        }}>{`MDN: Using CSS Flexible Boxes`}</a></li>\n    </ul>\n    <p>{`Additionally you should be aware of flexbox's bugs and limitations, especially in regards to IE11 support.\nGenerally the Design System layout components should work as expected in IE11, but it's always good to test.`}</p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/philipwalton/flexbugs\"\n      }}>{`Flexbugs`}</a>{` project for more information.`}</p>\n    <h3>{`Margins`}</h3>\n    <p>{`Using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jxnblk/styled-system\"\n      }}>{`styled-system`}</a>{` library, the Box and Flex components have several style props for handling margins,\nwhile adhering to the Design System's spacing scale.`}</p>\n    <p>{`To add margin around a component, wrap it with the Box component and use the `}<inlineCode parentName=\"p\">{`m`}</inlineCode>{` (margin) prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Box m={3}>\n  <Text>Hello</Text>\n</Box>\n`}</code></pre>\n    <p>{`The number `}<inlineCode parentName=\"p\">{`3`}</inlineCode>{` in this example refers to step 3 on the spacing scale (`}<inlineCode parentName=\"p\">{`theme.space`}</inlineCode>{`).\nThe spacing scale is an array of numbers that are used as pixel values in the Box component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// theme.space\n;[0, 4, 8, 16, 32, 64, 128]\n`}</code></pre>\n    <p>{`To add margin in a particular direction use the `}<inlineCode parentName=\"p\">{`mt`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`mr`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`mb`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`ml`}</inlineCode>{` props.\nThese props are shorthands for `}<inlineCode parentName=\"p\">{`margin-top`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`margin-right`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`margin-bottom`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`margin-left`}</inlineCode>{` respectively.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Box\n  mt={3}\n  mb={4}>\n  <Text>Hello</Text>\n</Box>\n`}</code></pre>\n    <h3>{`Shorthand Syntax`}</h3>\n    <p>{`Much like other libraries, including `}<a parentName=\"p\" {...{\n        \"href\": \"http://tachyons.io\"\n      }}>{`Tachyons`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://getbootstrap.com/docs/4.0/utilities/spacing/\"\n      }}>{`Bootstrap`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"http://basscss.com\"\n      }}>{`Basscss`}</a>{`,\nthe Box component uses a shorthand syntax for margin and padding.\nThis has a little bit of a learning curve and requires some internalization,\nbut due to the heavy use of these properties it can help with development velocity.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Shorthand`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Meaning`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`m`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`margin`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`mt`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`margin-top`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`mr`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`margin-right`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`mb`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`margin-bottom`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ml`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`margin-left`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`mx`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`margin-left`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`margin-right`}</inlineCode>{` (x-axis)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`my`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`margin-top`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`margin-top`}</inlineCode>{` (y-axis)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`p`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`padding`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`pt`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`padding-top`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`pr`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`padding-right`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`pb`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`padding-bottom`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`pl`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`padding-left`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`px`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`padding-left`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`padding-right`}</inlineCode>{` (x-axis)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`py`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`padding-top`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`padding-top`}</inlineCode>{` (y-axis)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3>{`Padding`}</h3>\n    <p>{`The Box and Flex components can also set padding, using a similar API to the margin props.`}</p>\n    <p>{`To add padding to a Box, use the `}<inlineCode parentName=\"p\">{`p`}</inlineCode>{` (padding) prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Box p={2}>\n  <Text>Hello</Text>\n</Box>\n`}</code></pre>\n    <p>{`To add padding in a single direction, use `}<inlineCode parentName=\"p\">{`pt`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`pr`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`pb`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`pl`}</inlineCode>{` props.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Box pt={2} pb={4}>\n  <Text>Hello</Text>\n</Box>\n`}</code></pre>\n    <h3>{`Creating a responsive grid layout`}</h3>\n    <p>{`The Flex and Box components can be used to create a flexbox-based grid layout,\nusing the same principles used in other grid systems such as `}<a parentName=\"p\" {...{\n        \"href\": \"https://getbootstrap.com\"\n      }}>{`Bootstrap`}</a>{`.`}</p>\n    <p>{`To start, create a wrapping component with padding.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box p={4} />\n`}</code></pre>\n    <p>{`Next, add a Flex component with the `}<inlineCode parentName=\"p\">{`wrap`}</inlineCode>{` prop to set `}<inlineCode parentName=\"p\">{`flex-wrap: wrap`}</inlineCode>{`.\nThis will work similarly to a \"row\" in traditional grid systems.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box p={4}>\n  <Flex wrap />\n</Box>\n`}</code></pre>\n    <p>{`Next add some Box components that will act as \"columns\",\nsetting the `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{` to make the Boxes fill the full-width of the container\nand stack on top of each other for small viewports.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Box p={4}>\n  <Flex wrap>\n    <Box width={1}>\n      <Text>Hello</Text>\n    </Box>\n    <Box width={1}>\n      <Text>Hello</Text>\n    </Box>\n  </Flex>\n</Box>\n`}</code></pre>\n    <p>{`Next, use the `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` prop's `}<a parentName=\"p\" {...{\n        \"href\": \"#responsive-widths\"\n      }}>{`responsive array`}</a>{` feature\nto change the width of the Boxes at the `}<em parentName=\"p\">{`small`}</em>{` breakpoint and up.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Box p={4}>\n  <Flex wrap>\n    <Box width={[ 1, 1/2 ]}>\n      <Text>Hello</Text>\n    </Box>\n    <Box width={[ 1, 1/2 ]}>\n      <Text>Hello</Text>\n    </Box>\n  </Flex>\n</Box>\n`}</code></pre>\n    <p>{`Here, the array value (`}<inlineCode parentName=\"p\">{`[ 1, 1/2 ]`}</inlineCode>{`) passed to `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` sets its width to `}<inlineCode parentName=\"p\">{`100%`}</inlineCode>{` on small viewports and `}<inlineCode parentName=\"p\">{`50%`}</inlineCode>{` on viewports wider than the `}<em parentName=\"p\">{`small`}</em>{` breakpoint.\nIf you resize your browser with this example, the Boxes should stack at narrow viewport widths, and appear side-by-side on wider viewports.`}</p>\n    <p>{`Next, to add gutters to the grid, use a combination of padding and negative margins.\nAdd `}<inlineCode parentName=\"p\">{`mx={-3}`}</inlineCode>{` to the Flex component to set left and right margins to `}<inlineCode parentName=\"p\">{`-theme.space[3]`}</inlineCode>{` (-16px).\nThis is how many CSS grid systems compensate for gutters.\nAdd an equal amount of padding to the Box components (`}<inlineCode parentName=\"p\">{`px={3}`}</inlineCode>{`) to create gutters between their child components.\nA bottom margin (`}<inlineCode parentName=\"p\">{`mb={4}`}</inlineCode>{`) can also be added to the Box components to handle spacing when stacked.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Box p={4}>\n  <Flex\n    wrap\n    mx={-3}>\n    <Box\n      width={[ 1, 1/2 ]}\n      px={3}\n      mb={4}>\n      <Text>Hello</Text>\n    </Box>\n    <Box\n      width={[ 1, 1/2 ]}\n      px={3}\n      mb={4}>\n      <Text>Hello</Text>\n    </Box>\n  </Flex>\n</Box>\n`}</code></pre>\n    <p>{`Note that `}<inlineCode parentName=\"p\">{`* { box-sizing: border-box }`}</inlineCode>{` should be set in your application to ensure that the padding and width work as expected in the above example.`}</p>\n    <p>{`Because each Box component in the example above adds left and right padding of `}<inlineCode parentName=\"p\">{`px={3}`}</inlineCode>{`,\nthe total amount of space between their children will be double that amount.\nSince the spacing scale is based on powers of two, that amount of space is equal to `}<inlineCode parentName=\"p\">{`theme.space[4]`}</inlineCode>{`,\nwhich is why the margin bottom is set to `}<inlineCode parentName=\"p\">{`4`}</inlineCode>{`.`}</p>\n    <h3>{`Creating a two-column layout`}</h3>\n    <p>{`Often pages will have a two column layout, where the left column contains subnavigation or filters and the right column contains the main content for the page.\nUsing some of the same techniques from above, this can be achieved using the Flex and Box components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Flex>\n  <Box px={3} width={1 / 4}>\n    <Sidebar />\n  </Box>\n  <Box px={3} width={3 / 4}>\n    <MainContent />\n  </Box>\n</Flex>\n`}</code></pre>\n    <h3>{`Creating a navbar`}</h3>\n    <p>{`The Flex and Box components are also well-suited to create things like navbars and toolbars.`}</p>\n    <p>{`Start with a Flex container and set its color to white with a blue background.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Flex color=\"white\" bg=\"blue\" />\n`}</code></pre>\n    <p>{`Next, add an Icon and some placeholder Text components for demonstration.\nIn a real application, these would likely be links and buttons.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Flex\n  color='white'\n  bg='blue'>\n  <Icon\n    name='hotel'\n    mr={2}\n  />\n  <Text\n    bold\n    mx={2}>\n    Hello\n  </Text>\n  <Text\n    ml='auto'\n    mr={2}>\n    Right Side\n  </Text>\n</Flex>\n`}</code></pre>\n    <p>{`Note the `}<inlineCode parentName=\"p\">{`ml='auto'`}</inlineCode>{` on the last item.\nSetting `}<inlineCode parentName=\"p\">{`margin: auto`}</inlineCode>{` on a flex item will space it away from its sibling,\nin this case moving the item to the right side of the navbar.`}</p>\n    <p>{`Next, add some padding and use the `}<inlineCode parentName=\"p\">{`align`}</inlineCode>{` prop on the parent Flex component to control the layout.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-.jsx\"\n      }}>{`<Flex\n  p={2}\n  align='center'\n  color='white'\n  bg='blue'>\n  <Icon\n    name='hotel'\n    mr={2}\n  />\n  <Text\n    bold\n    mx={2}>\n    Hello\n  </Text>\n  <Text\n    ml='auto'\n    mr={2}>\n    Right Side\n  </Text>\n</Flex>\n`}</code></pre>\n    <h3>{`Creating tiled layout`}</h3>\n    <p>{`Often you'll see cards representing an list of items arranged in a tiled layout.\nUsing the `}<a parentName=\"p\" {...{\n        \"href\": \"#responsive-widths\"\n      }}>{`responsive width`}</a>{` feature of the Box component\nand the `}<inlineCode parentName=\"p\">{`wrap`}</inlineCode>{` prop on the Flex component, this sort of layout can be achieved with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Flex wrap>\n  {items.map(item => (\n    <Box key={item.id} p={3} width={[1 / 2, 1 / 3, 1 / 4]}>\n      <ProductCard {...item} />\n    </Box>\n  ))}\n</Flex>\n`}</code></pre>\n    <h3>{`Responsive Widths`}</h3>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jxnblk/styled-system\"\n      }}>{`styled-system`}</a>{` library supports setting responsive widths that change per breakpoint with a mobile-first approach.`}</p>\n    <p>{`The Box component accepts number values to set percentage-based widths.\nAny number from 0–1 will be converted to a percentage.\nAny number greater than 1 will be converted to fixed pixel values.\nAnd strings may be passed to use other CSS units, such as `}<inlineCode parentName=\"p\">{`em`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`vw`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// width: 100%\n<Box width={1} />\n\n// width: 50%\n<Box width={1/2} />\n<Box width={0.5} />\n\n// width: 128px\n<Box width={128} />\n\n// width: 2em\n<Box width='2em' />\n`}</code></pre>\n    <p>{`To set a width that changes at different breakpoints, pass an array to the `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box\n  width={[\n    1, // 100% at all viewport widths (xs breakpoint)\n    1 / 2, // 50% from the small (sm) breakpoint and up\n    1 / 3, // 33% from the medium (md) breakpoint and up\n    1 / 4, // 25% from the large (lg) breakpoint and up\n    1 / 8, // 12.5% from the x-large (xl) breakpoint and up\n  ]}\n/>\n`}</code></pre>\n    <p>{`To skip setting a width at a particular breakpoint, use a `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` value in the array.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box\n  width={[\n    1, // 100% for all viewport widths\n    null, // skip the sm breakpoint (stays 100%)\n    1 / 2, // 50% from the md breakpoint and up\n  ]}\n/>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}