{"version":3,"sources":["webpack:///./src/pages/mdx-example.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","onClick","alert","isMDXComponent"],"mappings":"mPAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,0CACA,4CAA2B,0BAAYC,WAAW,KAAvB,OAA3B,OAAkF,0BAAYA,WAAW,KAAvB,QAAlF,yCAA4K,+BAAGA,WAAW,KAAQ,CAC9L,KAAQ,oCACP,0BAAYA,WAAW,KAAvB,eAFL,KAGA,4FACA,qBACF,YAAC,IAAD,CAAQC,QAAS,kBAAMC,MAAM,+BAA+BH,QAAQ,UAApE,oCAEE,gCAAe,0BAAYC,WAAW,KAAvB,kBAAf,qBAA+F,0BAAYA,WAAW,KAAvB,cAA/F,0EACA,yCAAwB,0BAAYA,WAAW,KAAvB,OAAxB,QAAgF,0BAAYA,WAAW,KAAvB,OAAhF,OAAuI,0BAAYA,WAAW,KAAvB,QAAvI,0CAKJJ,EAAWO,gBAAiB","file":"component---src-pages-mdx-example-md-2de953c531df006c7e06.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/sdalonzo/Documents/GitHub/design-system/docsite/src/components/Layout/index.js\";\nimport { Button } from '../components/Button';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Markdown Example`}</h1>\n    <p>{`This is a markdown (`}<inlineCode parentName=\"p\">{`.md`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{`) file that is being transformed with `}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsby-mdx.netlify.com/\"\n      }}><inlineCode parentName=\"a\">{`gatsby-mdx`}</inlineCode></a>{`.`}</p>\n    <p>{`What's cool about it is you can mix markdown with React components:`}</p>\n    <p>\n  <Button onClick={() => alert('You clicked the button! 🍪')} mdxType=\"Button\">I'm a React Button Component 🙌</Button>\n    </p>\n    <p>{`and the `}<inlineCode parentName=\"p\">{`<ResetStyle />`}</inlineCode>{` component in the `}<inlineCode parentName=\"p\">{`<Layout />`}</inlineCode>{` is providing a consistent style for all the pages with minimal effort`}</p>\n    <p>{`You can also mix `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.md`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{` files in your pages folder as needed`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}