{"version":3,"sources":["webpack:///./src/pages/components/iconography.js"],"names":["Iconography","__webpack_require__","r","__webpack_exports__","d"],"mappings":"2FAoDe,SAASA,IACtB,OAAO,KArDTC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAH","file":"component---src-pages-components-iconography-js-2d94bf9e377b1ba2f300.js","sourcesContent":["// import React from 'react'\n// import { Box, Flex, Heading, Text, Icon, BlockLink } from 'pcln-design-system'\n// import icons from 'pcln-design-system/icons.json'\n// // import { PageTitle, Description, Code } from '../src/components'\n\n// const iconNames = Object.keys(icons)\n\n// const Column = props => <Box {...props} width={[1 / 3, null, 1 / 3, 1 / 5]} mb={3} px={2} />\n\n// const createDataURI = svg => `data:image/svg+xml;utf8,${svg}`\n// const createSVG = path =>\n//   createDataURI(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n// <svg xmlns=\"http://www.w3.org/2000/svg\"\n//   viewbox=\"0 0 24 24\" width=\"24\" height=\"24\">\n//   <path d=\"${path}\" />\n// </svg>`).replace('\\n', ' ')\n\n// const IconList = props =>\n//   props.icons.map(icon => (\n//     <Column key={icon} py={4} bg=\"lightGray\">\n//       <BlockLink\n//         href={createSVG(icons[icon].path)}\n//         download={`${icon}.svg`}\n//         title={`Download ${icon} as SVG`}\n//         hoverColor=\"blue\"\n//       >\n//         <Flex mb={3} align=\"center\" justify=\"center\">\n//           <Icon name={icon} size={48} />\n//         </Flex>\n//       </BlockLink>\n//       <Text align=\"center\">\n//         <Code fontSize={0} color=\"gray\">\n//           {icon}\n//         </Code>\n//       </Text>\n//     </Column>\n//   ))\n\n// const Iconography = props => (\n//   <Box>\n//     {/* <PageTitle>Iconography</PageTitle>\n//     <Description>\n//       The design system includes icons based on Googles Material Design Icons.\n//     </Description> */}\n//     <Flex wrap pt={4}>\n//       <IconList icons={iconNames} />\n//     </Flex>\n//   </Box>\n// )\n\n// export default Iconography\n\nexport default function Iconography() {\n  return null;\n}\n"],"sourceRoot":""}